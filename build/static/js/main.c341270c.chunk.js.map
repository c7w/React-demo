{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","value","setValue","passed","setPassed","failed","setFailed","className","defaultValue","onChange","type","onClick","message","info","submit","title","percent","Math","round","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAkDeA,MA5Cf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA4BJ,mBAAS,GAArC,mBAAOK,EAAP,KAAeC,EAAf,KAoBA,OACE,sBAAKC,UAAU,MAAf,UACE,uDACA,sBAAKA,UAAU,WAAf,UACE,yDACA,cAAC,IAAD,CAAaC,aAAc,GAAIC,SAvBrC,SAAmBR,GACjBC,EAASD,MAoBP,YAGE,cAAC,IAAD,CAAQS,KAAK,UAAUC,QAAS,YApBtC,SAAgBV,GACVA,EAAQ,EACVW,IAAQC,KAAK,8CACJZ,EAAQ,GACjBK,EAAUD,EAAS,GACVJ,GAAS,IAClBG,EAAUD,EAAS,GAEnBS,IAAQC,KAAK,gDAY6BC,CAAOb,IAA/C,oBAHF,aAIE,cAAC,IAAD,CAAQS,KAAK,UAAUC,QAAS,WAAQP,EAAU,GAAIE,EAAU,IAAhE,sBAEF,sBAAKC,UAAU,cAAf,UACE,cAAC,IAAD,CAAWQ,MAAM,gBAAgBd,MAAOE,IAD1C,IACqD,uBACnD,cAAC,IAAD,CAAWY,MAAM,gBAAgBd,MAAOI,IAAU,0BAEpD,sBAAKE,UAAU,eAAf,UACE,mDACA,cAAC,IAAD,CAAUG,KAAK,SAASH,UAAU,iBAAiBS,QAASb,EAAOE,IAAS,EAAI,IAAMY,KAAKC,MAAMf,GAAQA,EAAOE,GAAQ,cC9BjHc,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.c341270c.chunk.js","sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css'\n\nimport { InputNumber, Button, Progress, Statistic, message } from 'antd';\n\nfunction App() {\n  const [value, setValue] = useState(90);\n  const [passed, setPassed] = useState(0);\n  const [failed, setFailed] = useState(0);\n  \n  function valChange(value: number) {\n    setValue(value);\n  }\n\n  function submit(value: number) {\n    if (value < 0) {\n      message.info(\"The value you inputed was too small. (< 0)\");\n    } else if (value < 60) {\n      setFailed(failed + 1);\n    } else if (value <= 100) {\n      setPassed(passed + 1);\n    } else {\n      message.info(\"The value you inputed was too large. (> 100)\");\n    }\n  }\n\n\n\n  return (\n    <div className=\"App\">\n      <h1>Passed Number Counter</h1>\n      <div className=\"App-main\">\n        <p>Please Input the Score: </p>\n        <InputNumber defaultValue={90} onChange={ valChange } /> &nbsp;&nbsp;\n        <Button type=\"primary\" onClick={() => { submit(value); }}>Submit</Button>  &nbsp;&nbsp;\n        <Button type=\"primary\" onClick={() => { setPassed(0); setFailed(0); }}>Reset</Button>\n      </div>\n      <div className=\"App-DataRaw\">\n        <Statistic title=\"Passed Number\" value={passed} /> <br />\n        <Statistic title=\"Failed Number\" value={failed} /><br />\n      </div>\n      <div className=\"App-DataRate\">\n        <p>Passed Percentage:</p>\n        <Progress type=\"circle\" className=\"App-Percentage\" percent={passed+failed===0 ? 100 : Math.round(passed/(passed+failed)*100)} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}